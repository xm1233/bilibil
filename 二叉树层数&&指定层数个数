int Btdepth(Bitree P){
      int front=-1,rear=-1,last=0,high=0;//front队头，rear队尾，last为指向最右边节点的指针。
      InitQueue(Q);
      Q[++rear]=p;
      while(front<rear&&p)
      {p=Q[++front];
       if(p->lchild)
         Q[++rear]=p->lchild;
       if(p->rchild)
         Q[++rear]=p->rchild;
       if(front==last)
        {high++;
         last=rear;}
         }
      return high;}
     
int num(Bitree P,int k){
      int front=-1,rear=-1,last=0,high=0,x=0;
      InitQueue(Q);
      Q[++rear]=p;
      while(front<rear&&p)
      {p=Q[++front];
       if(p->lchild)
         Q[++rear]=p->lchild;
       if(p->rchild)
         Q[++rear]=p->rchild;
       if(front==last)
        {high++;
         if(k==high)
         {x=rear-front;}
         last=rear;}
         return x;
         }
      
